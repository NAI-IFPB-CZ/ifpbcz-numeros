#!/usr/bin/env python3
"""
Script para alternar configura√ß√µes de seguran√ßa do sistema

Este script ajuda a alternar entre modo seguro (produ√ß√£o) e modo de edi√ß√£o (desenvolvimento).
Permite configurar rapidamente as vari√°veis de seguran√ßa no arquivo config.py

FUNCIONAMENTO:
- Modo Seguro (Produ√ß√£o): Impede cria√ß√£o/edi√ß√£o de planilhas, protege dados existentes
- Modo Edi√ß√£o (Desenvolvimento): Permite cria√ß√£o/edi√ß√£o de planilhas para testes

SEGURAN√áA:
- PERMITIR_CRIACAO_PLANILHAS: Controla se novas planilhas podem ser criadas
- SOBRESCREVER_ARQUIVOS_EXISTENTES: Controla se arquivos existentes podem ser sobrescritos
- MODO_SOMENTE_LEITURA: For√ßa o sistema a operar apenas em leitura

EXEMPLOS DE USO:
    python configurar_seguranca.py seguro   # Ativa modo seguro
    python configurar_seguranca.py edicao   # Ativa modo edi√ß√£o
    python configurar_seguranca.py status   # Mostra configura√ß√µes atuais

AUTOR: Sistema Dashboard IFPB-CZ
DATA: 2025
"""

# Importa√ß√µes necess√°rias
import os      # Para verificar exist√™ncia de arquivos
import sys     # Para capturar argumentos da linha de comando

def alterar_configuracoes_seguranca(modo):
    """
    Altera as configura√ß√µes de seguran√ßa no arquivo config.py
    
    Args:
        modo (str): 'seguro' para produ√ß√£o ou 'edicao' para desenvolvimento
    
    Returns:
        bool: True se altera√ß√£o foi bem-sucedida, False caso contr√°rio
    """
    
    # Nome do arquivo de configura√ß√£o
    config_file = 'config.py'
    
    # Verificar se o arquivo de configura√ß√£o existe
    if not os.path.exists(config_file):
        print(f"‚ùå Arquivo {config_file} n√£o encontrado!")
        return False
    
    # Ler o conte√∫do atual do arquivo config.py
    with open(config_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Configurar para modo seguro (produ√ß√£o)
    if modo == 'seguro':
        # Configura√ß√µes para produ√ß√£o (modo seguro)
        # Desabilita cria√ß√£o de novas planilhas
        content = content.replace(
            'PERMITIR_CRIACAO_PLANILHAS = True',
            'PERMITIR_CRIACAO_PLANILHAS = False'
        )
        # Desabilita sobrescrita de arquivos existentes
        content = content.replace(
            'SOBRESCREVER_ARQUIVOS_EXISTENTES = True',
            'SOBRESCREVER_ARQUIVOS_EXISTENTES = False'
        )
        # Ativa modo somente leitura
        content = content.replace(
            'MODO_SOMENTE_LEITURA = False',
            'MODO_SOMENTE_LEITURA = True'
        )
        
        # Informar ao usu√°rio as mudan√ßas aplicadas
        print("‚úÖ Configura√ß√µes alteradas para MODO SEGURO (Produ√ß√£o)")
        print("   - PERMITIR_CRIACAO_PLANILHAS = False")
        print("   - SOBRESCREVER_ARQUIVOS_EXISTENTES = False")
        print("   - MODO_SOMENTE_LEITURA = True")
        
    # Configurar para modo de edi√ß√£o (desenvolvimento)
    elif modo == 'edicao':
        # Configura√ß√µes para desenvolvimento (modo edi√ß√£o)
        # Permite cria√ß√£o de novas planilhas
        content = content.replace(
            'PERMITIR_CRIACAO_PLANILHAS = False',
            'PERMITIR_CRIACAO_PLANILHAS = True'
        )
        # Permite sobrescrita de arquivos existentes
        content = content.replace(
            'SOBRESCREVER_ARQUIVOS_EXISTENTES = False',
            'SOBRESCREVER_ARQUIVOS_EXISTENTES = True'
        )
        # Desativa modo somente leitura
        content = content.replace(
            'MODO_SOMENTE_LEITURA = True',
            'MODO_SOMENTE_LEITURA = False'
        )
        
        # Informar ao usu√°rio as mudan√ßas aplicadas
        print("‚úÖ Configura√ß√µes alteradas para MODO EDI√á√ÉO (Desenvolvimento)")
        print("   - PERMITIR_CRIACAO_PLANILHAS = True")
        print("   - SOBRESCREVER_ARQUIVOS_EXISTENTES = True")
        print("   - MODO_SOMENTE_LEITURA = False")
        
    else:
        # Modo inv√°lido fornecido
        print("‚ùå Modo inv√°lido! Use 'seguro' ou 'edicao'")
        return False
    
    # Salvar as altera√ß√µes no arquivo config.py
    with open(config_file, 'w', encoding='utf-8') as f:
        f.write(content)
    
    # Confirma√ß√£o de sucesso
    print(f"\nüìù Arquivo {config_file} atualizado com sucesso!")
    print("üîÑ Reinicie o sistema Streamlit para aplicar as mudan√ßas.")
    
    return True

def mostrar_configuracoes_atuais():
    """
    Mostra as configura√ß√µes atuais do sistema
    
    L√™ as configura√ß√µes do arquivo config.py e exibe no console
    Indica se o sistema est√° em modo seguro ou edi√ß√£o
    """
    try:
        # Importar as configura√ß√µes atuais do arquivo config.py
        from config import (
            PERMITIR_CRIACAO_PLANILHAS,
            SOBRESCREVER_ARQUIVOS_EXISTENTES,
            MODO_SOMENTE_LEITURA
        )
        
        # Exibir o estado atual das configura√ß√µes
        print("üìä CONFIGURA√á√ïES ATUAIS:")
        print(f"   - PERMITIR_CRIACAO_PLANILHAS = {PERMITIR_CRIACAO_PLANILHAS}")
        print(f"   - SOBRESCREVER_ARQUIVOS_EXISTENTES = {SOBRESCREVER_ARQUIVOS_EXISTENTES}")
        print(f"   - MODO_SOMENTE_LEITURA = {MODO_SOMENTE_LEITURA}")
        
        # Determinar e exibir o modo atual do sistema
        if MODO_SOMENTE_LEITURA:
            print("   üîí Sistema em MODO SEGURO (Produ√ß√£o)")
        else:
            print("   üîì Sistema em MODO EDI√á√ÉO (Desenvolvimento)")
            
    except ImportError:
        # Erro ao importar configura√ß√µes - arquivo config.py pode n√£o existir
        print("‚ùå Erro ao carregar configura√ß√µes do config.py")

def main():
    """
    Fun√ß√£o principal do script
    
    Processa argumentos da linha de comando e executa a a√ß√£o correspondente:
    - seguro: Ativa modo seguro (produ√ß√£o)
    - edicao: Ativa modo edi√ß√£o (desenvolvimento)  
    - status: Mostra configura√ß√µes atuais
    """
    # Cabe√ßalho do programa
    print("üîß Gerenciador de Configura√ß√µes de Seguran√ßa")
    print("=" * 50)
    
    # Verificar se foi fornecido algum argumento
    if len(sys.argv) < 2:
        # Exibir instru√ß√µes de uso se nenhum argumento for fornecido
        print("üí° Uso:")
        print("   python configurar_seguranca.py <modo>")
        print("   python configurar_seguranca.py status")
        print("")
        print("üìã Modos dispon√≠veis:")
        print("   seguro  - Ativa prote√ß√µes para produ√ß√£o")
        print("   edicao  - Permite edi√ß√£o para desenvolvimento")
        print("   status  - Mostra configura√ß√µes atuais")
        print("")
        # Mostrar configura√ß√µes atuais como informa√ß√£o adicional
        mostrar_configuracoes_atuais()
        return
    
    # Capturar o modo solicitado (convertido para min√∫sculas)
    modo = sys.argv[1].lower()
    
    # Processar o comando baseado no modo solicitado
    if modo == 'status':
        # Exibir apenas o status atual
        mostrar_configuracoes_atuais()
    elif modo in ['seguro', 'edicao']:
        # Alterar configura√ß√µes para o modo solicitado
        alterar_configuracoes_seguranca(modo)
    else:
        # Modo inv√°lido fornecido
        print("‚ùå Modo inv√°lido! Use 'seguro', 'edicao' ou 'status'")


# Ponto de entrada do script
# Este bloco s√≥ √© executado quando o script √© chamado diretamente
if __name__ == "__main__":
    main()
