#!/usr/bin/env python3
"""
=============================================================================
SCRIPT DE TESTE DE CONFIGURA√á√ïES DE SEGURAN√áA - SISTEMA DASHBOARD IFPB-CZ
=============================================================================

Este script implementa valida√ß√£o abrangente e detalhada das configura√ß√µes
de seguran√ßa do Sistema Dashboard IFPB-CZ, verificando integridade,
funcionamento adequado e conformidade com pol√≠ticas de seguran√ßa
institucionais para prote√ß√£o de dados e preven√ß√£o de modifica√ß√µes
acidentais em ambiente de produ√ß√£o.

FUNCIONALIDADES PRINCIPAIS:
---------------------------
- Teste completo de configura√ß√µes de seguran√ßa do sistema
- Valida√ß√£o de importa√ß√£o e carregamento de par√¢metros
- Verifica√ß√£o de funcionalidade do gerador de dados
- Teste de prote√ß√µes contra salvamento n√£o autorizado
- An√°lise de modo de opera√ß√£o (produ√ß√£o vs desenvolvimento)
- Verifica√ß√£o de integridade dos arquivos de dados existentes

CONFIGURA√á√ïES TESTADAS:
-----------------------
- PERMITIR_CRIACAO_PLANILHAS: controle de gera√ß√£o de arquivos
- SOBRESCREVER_ARQUIVOS_EXISTENTES: prote√ß√£o contra perda
- MODO_SOMENTE_LEITURA: bloqueio de modifica√ß√µes acidentais
- MOSTRAR_LOGS: controle de verbosidade do sistema

TESTES DE SEGURAN√áA IMPLEMENTADOS:
----------------------------------
- Carregamento seguro de configura√ß√µes de seguran√ßa
- Instancia√ß√£o protegida do gerador de dados
- Teste de salvamento com bloqueios ativos
- Verifica√ß√£o de carregamento de dados existentes
- An√°lise de conformidade com perfil de seguran√ßa
- Valida√ß√£o de presen√ßa de arquivos cr√≠ticos

VERIFICA√á√ïES DE INTEGRIDADE:
----------------------------
- Exist√™ncia da pasta de dados principal
- Presen√ßa de todos os arquivos Excel obrigat√≥rios
- Contagem de arquivos cr√≠ticos encontrados
- Relat√≥rio de status de disponibilidade
- Diagn√≥stico de arquivos ausentes
- Orienta√ß√£o sobre uso de dados sint√©ticos

MODOS DE OPERA√á√ÉO VALIDADOS:
----------------------------
- PRODU√á√ÉO: m√°xima seguran√ßa e prote√ß√£o de dados
- DESENVOLVIMENTO: flexibilidade para modifica√ß√µes
- Identifica√ß√£o autom√°tica do modo configurado
- Recomenda√ß√µes de seguran√ßa espec√≠ficas

ARQUIVOS VERIFICADOS:
---------------------
- dados_ensino.xlsx: dados do m√≥dulo educacional
- dados_assistencia.xlsx: informa√ß√µes de assist√™ncia estudantil  
- dados_pesquisa.xlsx: dados de pesquisa acad√™mica
- dados_extensao.xlsx: informa√ß√µes de extens√£o universit√°ria
- dados_orcamento.xlsx: dados or√ßament√°rios institucionais
- dados_servidores.xlsx: informa√ß√µes de recursos humanos
- dados_ouvidoria.xlsx: dados do servi√ßo de ouvidoria
- dados_auditoria.xlsx: informa√ß√µes de auditoria interna
- dados_mundo_trabalho.xlsx: dados de mercado de trabalho

RELAT√ìRIOS GERADOS:
-------------------
- Status das configura√ß√µes de seguran√ßa carregadas
- Resultado dos testes de funcionalidade
- An√°lise do modo de opera√ß√£o configurado
- Mapeamento de arquivos de dados dispon√≠veis
- Diagn√≥stico de integridade do sistema
- Recomenda√ß√µes de configura√ß√£o apropriada

OBJETIVO:
---------
Garantir que o sistema esteja adequadamente configurado para
opera√ß√£o segura, validando prote√ß√µes contra modifica√ß√µes
acidentais e verificando disponibilidade de dados necess√°rios
para funcionamento correto do dashboard institucional.

DEPEND√äNCIAS:
-------------
- os, sys: manipula√ß√£o de sistema e caminhos
- pandas: manipula√ß√£o de dados para testes
- datetime: formata√ß√£o de timestamps
- config: configura√ß√µes de seguran√ßa do sistema
- modules.data_generator: gerador de dados para testes

AUTOR: Sistema NAI/IFPB-CZ
DATA: 2025
=============================================================================
"""

import os
import sys
import pandas as pd
from datetime import datetime

# Adicionar o m√≥dulo ao path para importa√ß√£o das configura√ß√µes
sys.path.append(os.path.join(os.path.dirname(__file__), 'modules'))

def testar_configuracoes_seguranca():
    """
    Teste abrangente e detalhado das configura√ß√µes de seguran√ßa do sistema.
    
    Esta fun√ß√£o realiza valida√ß√£o completa de todas as configura√ß√µes de
    seguran√ßa implementadas no Sistema Dashboard IFPB-CZ, verificando
    carregamento correto, funcionalidade adequada e conformidade com
    pol√≠ticas de prote√ß√£o de dados institucionais.
    
    PROCESSO DE VALIDA√á√ÉO:
    1. Carregamento seguro das configura√ß√µes de seguran√ßa
    2. Verifica√ß√£o de importa√ß√£o correta dos par√¢metros
    3. Teste de funcionalidade do gerador de dados
    4. Valida√ß√£o de prote√ß√µes contra salvamento n√£o autorizado
    5. An√°lise de modo de opera√ß√£o configurado
    6. Relat√≥rio de conformidade com perfil de seguran√ßa
    
    CONFIGURA√á√ïES ANALISADAS:
    - PERMITIR_CRIACAO_PLANILHAS: controle de gera√ß√£o de arquivos
    - SOBRESCREVER_ARQUIVOS_EXISTENTES: prote√ß√£o contra perda
    - MODO_SOMENTE_LEITURA: bloqueio de modifica√ß√µes acidentais  
    - MOSTRAR_LOGS: controle de verbosidade do sistema
    
    TESTES REALIZADOS:
    - Importa√ß√£o segura do m√≥dulo de configura√ß√µes
    - Instancia√ß√£o protegida do gerador de dados
    - Cria√ß√£o de dados de teste para valida√ß√£o
    - Teste de salvamento com prote√ß√µes ativas
    - Verifica√ß√£o de carregamento de dados existentes
    - An√°lise de conformidade com modo de opera√ß√£o
    
    AN√ÅLISES DE SEGURAN√áA:
    - Bloqueio correto de opera√ß√µes n√£o autorizadas
    - Funcionamento adequado das prote√ß√µes implementadas
    - Identifica√ß√£o de modo de opera√ß√£o (produ√ß√£o/desenvolvimento)
    - Valida√ß√£o de pol√≠ticas de seguran√ßa ativas
    - Recomenda√ß√µes de configura√ß√£o apropriada
    
    RETORNO:
    --------
    bool
        True se todas as configura√ß√µes est√£o funcionando corretamente,
        False se foram encontrados problemas cr√≠ticos
        
    SA√çDAS GERADAS:
    ---------------
    - Status do carregamento das configura√ß√µes
    - Valores atuais de cada par√¢metro de seguran√ßa
    - Resultado dos testes de funcionalidade
    - An√°lise do modo de opera√ß√£o configurado
    - Recomenda√ß√µes de seguran√ßa espec√≠ficas
    """
    # Exibir cabe√ßalho do teste de configura√ß√µes de seguran√ßa
    print("üîí TESTE DE CONFIGURA√á√ïES DE SEGURAN√áA")
    print("=" * 50)
    
    # =============================================================================
    # CARREGAMENTO E VALIDA√á√ÉO DAS CONFIGURA√á√ïES DE SEGURAN√áA
    # =============================================================================
    
    # Importar configura√ß√µes cr√≠ticas de seguran√ßa do sistema
    # Valida√ß√£o de disponibilidade e carregamento correto
    try:
        from config import (
            PERMITIR_CRIACAO_PLANILHAS,      # Controle de gera√ß√£o de arquivos
            SOBRESCREVER_ARQUIVOS_EXISTENTES, # Prote√ß√£o contra perda de dados
            MODO_SOMENTE_LEITURA,             # Bloqueio de modifica√ß√µes
            MOSTRAR_LOGS                      # Controle de verbosidade
        )
        
        # Confirmar carregamento bem-sucedido das configura√ß√µes
        print("‚úÖ Configura√ß√µes carregadas com sucesso:")
        print(f"   - PERMITIR_CRIACAO_PLANILHAS = {PERMITIR_CRIACAO_PLANILHAS}")
        print(f"   - SOBRESCREVER_ARQUIVOS_EXISTENTES = {SOBRESCREVER_ARQUIVOS_EXISTENTES}")
        print(f"   - MODO_SOMENTE_LEITURA = {MODO_SOMENTE_LEITURA}")
        print(f"   - MOSTRAR_LOGS = {MOSTRAR_LOGS}")
        
    except ImportError as e:
        # Falha cr√≠tica no carregamento das configura√ß√µes
        print(f"‚ùå Erro ao carregar configura√ß√µes: {e}")
        return False
    
    # Separador para se√ß√£o de testes funcionais
    print("\nüìä TESTE DE FUNCIONALIDADE:")
    print("-" * 30)
    
    # =============================================================================
    # TESTE DE FUNCIONALIDADE DO GERADOR DE DADOS COM PROTE√á√ïES ATIVAS
    # =============================================================================
    
    # Testar funcionamento do DataGenerator com configura√ß√µes de seguran√ßa
    try:
        # Importar m√≥dulo do gerador de dados sint√©ticos
        from modules.data_generator import DataGenerator
        
        # Criar inst√¢ncia do gerador para testes de seguran√ßa
        data_gen = DataGenerator()
        
        # Criar conjunto de dados de teste para valida√ß√£o
        # Estrutura m√≠nima para testar prote√ß√µes de salvamento
        dados_teste = pd.DataFrame({
            'ano': [2024, 2025],           # Anos para teste temporal
            'campo_teste': ['teste1', 'teste2'], # Campos de exemplo
            'valor': [100, 200]             # Valores num√©ricos de teste
        })
        
        # =============================================================================
        # TESTE DE PROTE√á√ÉO CONTRA SALVAMENTO N√ÉO AUTORIZADO
        # =============================================================================
        
        # Testar salvamento com prote√ß√µes de seguran√ßa ativas
        print("üß™ Testando salvamento de dados de teste...")
        resultado = data_gen._salvar_dados_excel(dados_teste, "teste_seguranca")
        
        # Analisar resultado do teste de salvamento
        if resultado is None:
            # Salvamento bloqueado corretamente pelas configura√ß√µes
            print("‚úÖ Salvamento bloqueado corretamente pelas configura√ß√µes de seguran√ßa")
        else:
            # Salvamento realizado - configura√ß√µes podem estar em modo desenvolvimento
            print(f"‚ö†Ô∏è  Arquivo salvo em: {resultado}")
            print("   (Configura√ß√µes de seguran√ßa podem estar desabilitadas)")
        
        # =============================================================================
        # TESTE DE CARREGAMENTO DE DADOS EXISTENTES
        # =============================================================================
        
        # Testar carregamento de dados sem modifica√ß√£o
        print("\nüß™ Testando carregamento de dados existentes...")
        dados_carregados = data_gen._carregar_dados_excel("teste_seguranca")
        
        # Analisar resultado do carregamento
        if dados_carregados is not None:
            # Dados carregados com sucesso
            print(f"‚úÖ Dados carregados com sucesso: {len(dados_carregados)} registros")
        else:
            # Nenhum dado encontrado (situa√ß√£o normal se arquivo n√£o existe)
            print("‚ÑπÔ∏è  Nenhum dado carregado (arquivo pode n√£o existir)")
        
    except Exception as e:
        # Erro durante execu√ß√£o dos testes
        print(f"‚ùå Erro durante o teste: {e}")
        return False
    
    # Separador para se√ß√£o de resumo
    print("\nüéØ RESUMO DOS TESTES:")
    print("-" * 20)
    
    # =============================================================================
    # AN√ÅLISE DE CONFORMIDADE COM PERFIL DE SEGURAN√áA
    # =============================================================================
    
    # Verificar configura√ß√£o recomendada para ambiente de produ√ß√£o
    if MODO_SOMENTE_LEITURA and not PERMITIR_CRIACAO_PLANILHAS and not SOBRESCREVER_ARQUIVOS_EXISTENTES:
        # Sistema configurado para m√°xima seguran√ßa
        print("‚úÖ Sistema configurado para PRODU√á√ÉO (modo seguro)")
        print("   - Dados protegidos contra altera√ß√µes acidentais")
        print("   - Cria√ß√£o de planilhas bloqueada")
        print("   - Sobrescrita de arquivos bloqueada")
    else:
        # Sistema configurado para desenvolvimento ou modo menos restritivo
        print("‚ö†Ô∏è  Sistema configurado para DESENVOLVIMENTO")
        print("   - Edi√ß√£o de dados permitida")
        print("   - Use apenas em ambiente de desenvolvimento")
    
    return True

def verificar_arquivos_dados():
    """
    Verifica√ß√£o abrangente da integridade dos arquivos de dados do sistema.
    
    Esta fun√ß√£o realiza valida√ß√£o completa da disponibilidade e integridade
    dos arquivos Excel contendo dados reais do Sistema Dashboard IFPB-CZ,
    garantindo que todos os m√≥dulos tenham acesso aos dados necess√°rios
    para funcionamento adequado.
    
    PROCESSO DE VERIFICA√á√ÉO:
    1. Valida√ß√£o da exist√™ncia da pasta principal de dados
    2. Verifica√ß√£o individual de cada arquivo Excel obrigat√≥rio
    3. Contagem de arquivos encontrados vs esperados
    4. Relat√≥rio detalhado de status de disponibilidade
    5. Diagn√≥stico de arquivos ausentes
    6. Orienta√ß√µes sobre uso de dados sint√©ticos alternativos
    
    ARQUIVOS VERIFICADOS:
    - dados_ensino.xlsx: informa√ß√µes educacionais do campus
    - dados_assistencia.xlsx: dados de assist√™ncia estudantil
    - dados_pesquisa.xlsx: informa√ß√µes de pesquisa acad√™mica
    - dados_extensao.xlsx: dados de extens√£o universit√°ria
    - dados_orcamento.xlsx: informa√ß√µes or√ßament√°rias
    - dados_servidores.xlsx: dados de recursos humanos
    - dados_ouvidoria.xlsx: informa√ß√µes de ouvidoria
    - dados_auditoria.xlsx: dados de auditoria interna
    - dados_mundo_trabalho.xlsx: informa√ß√µes de mercado de trabalho
    
    AN√ÅLISES REALIZADAS:
    - Exist√™ncia da estrutura de pastas necess√°ria
    - Disponibilidade individual de cada arquivo cr√≠tico
    - Contagem total de arquivos encontrados
    - Identifica√ß√£o de arquivos ausentes espec√≠ficos
    - Relat√≥rio de integridade geral do sistema
    
    RETORNO:
    --------
    bool
        True se a verifica√ß√£o foi executada com sucesso,
        False se houve falha cr√≠tica na estrutura de pastas
        
    SA√çDAS GERADAS:
    ---------------
    - Status individual de cada arquivo de dados
    - Contagem total de arquivos encontrados
    - Diagn√≥stico de integridade do sistema
    - Orienta√ß√µes sobre dados sint√©ticos alternativos
    """
    # Exibir cabe√ßalho da verifica√ß√£o de arquivos
    print("\nüìÅ VERIFICA√á√ÉO DE ARQUIVOS DE DADOS:")
    print("-" * 35)
    
    # Definir estrutura de dados esperada no sistema
    pasta_dados = "dados"  # Pasta principal contendo arquivos Excel
    
    # Lista completa de arquivos Excel obrigat√≥rios para funcionamento
    arquivos_esperados = [
        "dados_ensino.xlsx",           # Dados educacionais do campus
        "dados_assistencia.xlsx",      # Informa√ß√µes de assist√™ncia estudantil
        "dados_pesquisa.xlsx",         # Dados de pesquisa acad√™mica
        "dados_extensao.xlsx",         # Informa√ß√µes de extens√£o universit√°ria
        "dados_orcamento.xlsx",        # Dados or√ßament√°rios institucionais
        "dados_servidores.xlsx",       # Informa√ß√µes de recursos humanos
        "dados_ouvidoria.xlsx",        # Dados do servi√ßo de ouvidoria
        "dados_auditoria.xlsx",        # Informa√ß√µes de auditoria interna
        "dados_mundo_trabalho.xlsx"    # Dados de mercado de trabalho
    ]
    
    # =============================================================================
    # VALIDA√á√ÉO DE ESTRUTURA DE PASTAS NECESS√ÅRIA
    # =============================================================================
    
    # Verificar exist√™ncia da pasta principal de dados
    if not os.path.exists(pasta_dados):
        print(f"‚ùå Pasta '{pasta_dados}' n√£o encontrada")
        return False
    
    # =============================================================================
    # VERIFICA√á√ÉO INDIVIDUAL DE CADA ARQUIVO CR√çTICO
    # =============================================================================
    
    # Contador para estat√≠sticas de disponibilidade
    arquivos_encontrados = 0
    
    # Iterar por todos os arquivos esperados para verifica√ß√£o
    for arquivo in arquivos_esperados:
        # Construir caminho completo para cada arquivo
        caminho = os.path.join(pasta_dados, arquivo)
        
        # Verificar disponibilidade individual do arquivo
        if os.path.exists(caminho):
            # Arquivo encontrado e dispon√≠vel
            print(f"‚úÖ {arquivo}")
            arquivos_encontrados += 1
        else:
            # Arquivo ausente - sistema usar√° dados sint√©ticos
            print(f"‚ùå {arquivo} - n√£o encontrado")
    
    # =============================================================================
    # RELAT√ìRIO DE INTEGRIDADE E DIAGN√ìSTICO FINAL
    # =============================================================================
    
    # Exibir estat√≠sticas de disponibilidade dos dados
    print(f"\nüìä Resultado: {arquivos_encontrados}/{len(arquivos_esperados)} arquivos encontrados")
    
    # Analisar integridade geral do sistema de dados
    if arquivos_encontrados == len(arquivos_esperados):
        # Sistema com dados completos e √≠ntegros
        print("‚úÖ Todos os arquivos de dados est√£o presentes")
    else:
        # Sistema com dados parciais - orienta√ß√£o sobre funcionamento
        print("‚ö†Ô∏è  Alguns arquivos de dados est√£o ausentes")
        print("   O sistema usar√° dados sint√©ticos para m√≥dulos sem arquivos")
    
    return True

def main():
    """
    Fun√ß√£o principal de coordena√ß√£o dos testes de seguran√ßa do sistema.
    
    Esta fun√ß√£o coordena a execu√ß√£o completa de todos os testes de
    seguran√ßa e integridade do Sistema Dashboard IFPB-CZ, organizando
    a sequ√™ncia de valida√ß√µes e gerando relat√≥rio consolidado dos
    resultados obtidos.
    
    PROCESSO DE EXECU√á√ÉO:
    1. Registro de timestamp de in√≠cio dos testes
    2. Execu√ß√£o dos testes de configura√ß√µes de seguran√ßa
    3. Verifica√ß√£o de integridade dos arquivos de dados
    4. Gera√ß√£o de relat√≥rio consolidado de resultados
    5. Apresenta√ß√£o de conclus√µes e recomenda√ß√µes
    
    TESTES COORDENADOS:
    - Configura√ß√µes de seguran√ßa: valida√ß√£o completa
    - Arquivos de dados: verifica√ß√£o de integridade
    - Modo de opera√ß√£o: an√°lise de conformidade
    - Prote√ß√µes ativas: teste de funcionalidade
    
    SA√çDAS GERADAS:
    - Timestamp de execu√ß√£o dos testes
    - Resultado consolidado de todos os testes
    - Status de integridade do sistema
    - Recomenda√ß√µes de configura√ß√£o
    - Orienta√ß√µes para resolu√ß√£o de problemas
    
    RETORNO:
    --------
    None
        Fun√ß√£o de coordena√ß√£o com sa√≠da via logging console
    """
    # Registrar timestamp de in√≠cio dos testes de seguran√ßa
    print(f"üîß Teste de Seguran√ßa - {datetime.now().strftime('%d/%m/%Y %H:%M:%S')}")
    print("")
    
    # =============================================================================
    # EXECU√á√ÉO SEQUENCIAL DOS TESTES DE SEGURAN√áA E INTEGRIDADE
    # =============================================================================
    
    # Executar testes de configura√ß√µes de seguran√ßa primeiro
    if testar_configuracoes_seguranca():
        # Se testes de seguran√ßa foram bem-sucedidos, verificar arquivos
        verificar_arquivos_dados()
        
        # =============================================================================
        # RELAT√ìRIO FINAL DE SUCESSO DOS TESTES
        # =============================================================================
        
        print("\nüéâ TESTE CONCLU√çDO!")
        print("=" * 20)
        print("‚úÖ Configura√ß√µes de seguran√ßa testadas com sucesso")
        print("üìù Verifique os logs acima para detalhes espec√≠ficos")
        
    else:
        # =============================================================================
        # RELAT√ìRIO DE FALHA NOS TESTES CR√çTICOS
        # =============================================================================
        
        print("\n‚ùå TESTE FALHOU!")
        print("=" * 15)
        print("‚ùå Problemas encontrados nas configura√ß√µes de seguran√ßa")
        print("üìù Verifique os erros acima para mais detalhes")

if __name__ == "__main__":
    """
    Ponto de entrada principal do script de teste de seguran√ßa.
    
    Esta se√ß√£o coordena a execu√ß√£o completa dos testes de valida√ß√£o
    das configura√ß√µes de seguran√ßa do Sistema Dashboard IFPB-CZ,
    garantindo funcionamento adequado das prote√ß√µes implementadas
    e integridade dos dados do sistema.
    
    EXECU√á√ÉO REALIZADA:
    1. Verifica√ß√£o de execu√ß√£o direta do script
    2. Chamada da fun√ß√£o principal de coordena√ß√£o
    3. Execu√ß√£o de todos os testes de seguran√ßa
    4. Gera√ß√£o de relat√≥rio consolidado de resultados
    
    FINALIDADE:
    -----------
    Permitir execu√ß√£o independente do script para valida√ß√£o
    completa das configura√ß√µes de seguran√ßa, facilitando
    verifica√ß√£o de conformidade e diagn√≥stico de problemas.
    
    PROCESSO:
    ---------
    - Execu√ß√£o direta: python testar_seguranca.py
    - Valida√ß√£o completa: configura√ß√µes e arquivos
    - Teste abrangente: prote√ß√µes e integridade
    - Relat√≥rio detalhado: resultados e recomenda√ß√µes
    """
    main()
